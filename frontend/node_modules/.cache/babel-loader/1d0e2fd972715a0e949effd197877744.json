{"ast":null,"code":"import*as React from'react';import*as AntdIcons from'@ant-design/icons';import{IconWrap}from'./IconWrap';import{usePageData}from'../../hooks/usePage';import{categories}from'./antd-icons';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var ThemeType;(function(ThemeType){ThemeType[\"Filled\"]=\"Filled\";ThemeType[\"Outlined\"]=\"Outlined\";ThemeType[\"TwoTone\"]=\"TwoTone\";})(ThemeType||(ThemeType={}));var Category=function Category(_ref){var icons=_ref.icons,title=_ref.title;var categoryTitle=title.charAt(0).toUpperCase()+title.slice(1);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"section-title mb-4\",children:categoryTitle}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:icons.map(function(_ref2,i){var icon=_ref2.icon,name=_ref2.name;return/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-2 col-md-3 col-sm-4 col-6\",children:/*#__PURE__*/_jsxs(IconWrap,{children:[/*#__PURE__*/React.createElement(allIcons[icon]),/*#__PURE__*/_jsx(\"span\",{className:\"selector\",children:name})]})},i);})})]});};var allIcons=AntdIcons;var pageData={title:'Ant icons',fulFilled:true,breadcrumbs:[{title:'Home',route:'default-dashboard'},{title:'UI Kit ',route:'default-dashboard'},{title:'Ant icons'}]};var AntdIconsPage=function AntdIconsPage(){usePageData(pageData);var theme=ThemeType.Outlined;return/*#__PURE__*/_jsx(_Fragment,{children:Object.keys(categories).map(function(key){var iconList=categories[key];return{category:key,icons:iconList.map(function(iconName){return{icon:iconName+theme,name:iconName};}).filter(function(_ref3){var icon=_ref3.icon;return allIcons[icon];})};}).map(function(_ref4){var category=_ref4.category,icons=_ref4.icons;return/*#__PURE__*/_jsx(Category,{title:category,icons:icons},category);})});};export default AntdIconsPage;","map":{"version":3,"sources":["D:/nginx/frontend/src/pages/icons/AntdIconsPage.tsx"],"names":["React","AntdIcons","IconWrap","usePageData","categories","ThemeType","Category","icons","title","categoryTitle","charAt","toUpperCase","slice","map","i","icon","name","createElement","allIcons","pageData","fulFilled","breadcrumbs","route","AntdIconsPage","theme","Outlined","Object","keys","key","iconList","category","iconName","filter"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CAEA,MAAO,GAAKC,CAAAA,SAAZ,KAA2B,mBAA3B,CAEA,OAASC,QAAT,KAAyB,YAAzB,CACA,OAASC,WAAT,KAA4B,qBAA5B,CAIA,OAASC,UAAT,KAA2C,cAA3C,C,6IAEA,UAAYC,CAAAA,SAAZ,C,UAAYA,S,EAAAA,S,oBAAAA,S,wBAAAA,S,yBAAAA,S,GAAAA,S,MAMZ,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAsB,IAAnBC,CAAAA,KAAmB,MAAnBA,KAAmB,CAAZC,KAAY,MAAZA,KAAY,CACrC,GAAMC,CAAAA,aAAa,CAAGD,KAAK,CAACE,MAAN,CAAa,CAAb,EAAgBC,WAAhB,GAAgCH,KAAK,CAACI,KAAN,CAAY,CAAZ,CAAtD,CAEA,mBACE,oCACE,WAAI,SAAS,CAAC,oBAAd,UAAoCH,aAApC,EADF,cAGE,YAAK,SAAS,CAAC,KAAf,UACGF,KAAK,CAACM,GAAN,CAAU,eAAiBC,CAAjB,CAAuB,IAApBC,CAAAA,IAAoB,OAApBA,IAAoB,CAAdC,IAAc,OAAdA,IAAc,CAEhC,mBACE,YAAK,SAAS,CAAC,kCAAf,uBACE,MAAC,QAAD,yBACGhB,KAAK,CAACiB,aAAN,CAAoBC,QAAQ,CAACH,IAAD,CAA5B,CADH,cAEE,aAAM,SAAS,CAAC,UAAhB,UAA4BC,IAA5B,EAFF,GADF,EAAuDF,CAAvD,CADF,CAQD,CAVA,CADH,EAHF,GADF,CAmBD,CAtBD,CAwBA,GAAMI,CAAAA,QAEL,CAAGjB,SAFJ,CAIA,GAAMkB,CAAAA,QAAmB,CAAG,CAC1BX,KAAK,CAAE,WADmB,CAE1BY,SAAS,CAAE,IAFe,CAG1BC,WAAW,CAAE,CACX,CACEb,KAAK,CAAE,MADT,CAEEc,KAAK,CAAE,mBAFT,CADW,CAKX,CACEd,KAAK,CAAE,SADT,CAEEc,KAAK,CAAE,mBAFT,CALW,CASX,CACEd,KAAK,CAAE,WADT,CATW,CAHa,CAA5B,CAkBA,GAAMe,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1BpB,WAAW,CAACgB,QAAD,CAAX,CACA,GAAMK,CAAAA,KAAK,CAAGnB,SAAS,CAACoB,QAAxB,CAEA,mBACE,yBACGC,MAAM,CAACC,IAAP,CAAYvB,UAAZ,EACES,GADF,CACM,SAACe,GAAD,CAAS,CACZ,GAAMC,CAAAA,QAAQ,CAAGzB,UAAU,CAACwB,GAAD,CAA3B,CAEA,MAAO,CACLE,QAAQ,CAAEF,GADL,CAELrB,KAAK,CAAEsB,QAAQ,CACZhB,GADI,CACA,SAACkB,QAAD,QAAe,CAAEhB,IAAI,CAAEgB,QAAQ,CAAGP,KAAnB,CAA0BR,IAAI,CAAEe,QAAhC,CAAf,EADA,EAEJC,MAFI,CAEG,mBAAGjB,CAAAA,IAAH,OAAGA,IAAH,OAAcG,CAAAA,QAAQ,CAACH,IAAD,CAAtB,EAFH,CAFF,CAAP,CAMD,CAVF,EAWEF,GAXF,CAWM,mBAAGiB,CAAAA,QAAH,OAAGA,QAAH,CAAavB,KAAb,OAAaA,KAAb,oBACH,KAAC,QAAD,EAAyB,KAAK,CAAEuB,QAAhC,CAA4D,KAAK,CAAEvB,KAAnE,EAAeuB,QAAf,CADG,EAXN,CADH,EADF,CAkBD,CAtBD,CAwBA,cAAeP,CAAAA,aAAf","sourcesContent":["import * as React from 'react';\r\n\r\nimport * as AntdIcons from '@ant-design/icons';\r\n\r\nimport { IconWrap } from './IconWrap';\r\nimport { usePageData } from '../../hooks/usePage';\r\n\r\nimport { IPageData } from '../../interfaces/page';\r\n\r\nimport { categories, CategoriesKeys } from './antd-icons';\r\n\r\nexport enum ThemeType {\r\n  Filled = 'Filled',\r\n  Outlined = 'Outlined',\r\n  TwoTone = 'TwoTone'\r\n}\r\n\r\nconst Category = ({ icons, title }) => {\r\n  const categoryTitle = title.charAt(0).toUpperCase() + title.slice(1);\r\n\r\n  return (\r\n    <div>\r\n      <h4 className='section-title mb-4'>{categoryTitle}</h4>\r\n\r\n      <div className='row'>\r\n        {icons.map(({ icon, name }, i) => {\r\n\r\n          return (\r\n            <div className='col-lg-2 col-md-3 col-sm-4 col-6' key={i}>\r\n              <IconWrap>\r\n                {React.createElement(allIcons[icon])}\r\n                <span className='selector'>{name}</span>\r\n              </IconWrap>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst allIcons: {\r\n  [key: string]: any;\r\n} = AntdIcons;\r\n\r\nconst pageData: IPageData = {\r\n  title: 'Ant icons',\r\n  fulFilled: true,\r\n  breadcrumbs: [\r\n    {\r\n      title: 'Home',\r\n      route: 'default-dashboard'\r\n    },\r\n    {\r\n      title: 'UI Kit ',\r\n      route: 'default-dashboard'\r\n    },\r\n    {\r\n      title: 'Ant icons'\r\n    }\r\n  ]\r\n};\r\n\r\nconst AntdIconsPage = () => {\r\n  usePageData(pageData);\r\n  const theme = ThemeType.Outlined;\r\n\r\n  return (\r\n    <>\r\n      {Object.keys(categories)\r\n        .map((key) => {\r\n          const iconList = categories[key];\r\n\r\n          return {\r\n            category: key,\r\n            icons: iconList\r\n              .map((iconName) => ({ icon: iconName + theme, name: iconName }))\r\n              .filter(({ icon }) => allIcons[icon])\r\n          };\r\n        })\r\n        .map(({ category, icons }) => (\r\n          <Category key={category} title={category as CategoriesKeys} icons={icons} />\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AntdIconsPage;\r\n"]},"metadata":{},"sourceType":"module"}