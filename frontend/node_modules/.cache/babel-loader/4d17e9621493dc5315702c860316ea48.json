{"ast":null,"code":"import React from'react';import{ResponsiveContainer,AreaChart,Area,XAxis,YAxis,CartesianGrid,Tooltip}from'recharts';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var data=[{month:'2015.01',a:4000,b:2400,c:2400},{month:'2015.02',a:3000,b:1398,c:2210},{month:'2015.03',a:2000,b:9800,c:2290},{month:'2015.04',a:2780,b:3908,c:2000},{month:'2015.05',a:1890,b:4800,c:2181},{month:'2015.06',a:2390,b:3800,c:2500},{month:'2015.07',a:3490,b:4300,c:2100}];var getPercent=function getPercent(value,total){var ratio=total>0?value/total:0;return toPercent(ratio,2);};var toPercent=function toPercent(decimal){var fixed=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;return\"\".concat((decimal*100).toFixed(fixed),\"%\");};var renderTooltipContent=function renderTooltipContent(o){var payload=o.payload,label=o.label;var total=payload.reduce(function(result,entry){return result+entry.value;},0);return/*#__PURE__*/_jsxs(\"div\",{className:\"customized-tooltip-content\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"total\",children:\"\".concat(label,\" (Total: \").concat(total,\")\")}),/*#__PURE__*/_jsx(\"ul\",{className:\"list\",children:payload.map(function(entry,index){return/*#__PURE__*/_jsx(\"li\",{style:{color:entry.color},children:\"\".concat(entry.name,\": \").concat(entry.value,\"(\").concat(getPercent(entry.value,total),\")\")},\"item-\".concat(index));})})]});};var PercentAreaChart=function PercentAreaChart(){return/*#__PURE__*/_jsx(ResponsiveContainer,{height:300,width:'100%',children:/*#__PURE__*/_jsxs(AreaChart,{width:500,height:400,data:data,stackOffset:\"expand\",margin:{top:10},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"month\"}),/*#__PURE__*/_jsx(YAxis,{tickFormatter:toPercent}),/*#__PURE__*/_jsx(Tooltip,{content:renderTooltipContent}),/*#__PURE__*/_jsx(Area,{type:\"monotone\",dataKey:\"a\",stackId:\"1\",stroke:\"#8884d8\",fill:\"#8884d8\"}),/*#__PURE__*/_jsx(Area,{type:\"monotone\",dataKey:\"b\",stackId:\"1\",stroke:\"#82ca9d\",fill:\"#82ca9d\"}),/*#__PURE__*/_jsx(Area,{type:\"monotone\",dataKey:\"c\",stackId:\"1\",stroke:\"#ffc658\",fill:\"#ffc658\"})]})});};export default PercentAreaChart;","map":{"version":3,"sources":["D:/nginx/frontend/src/pages/charts/recharts/charts/PercentAreaChart.tsx"],"names":["React","ResponsiveContainer","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","data","month","a","b","c","getPercent","value","total","ratio","toPercent","decimal","fixed","toFixed","renderTooltipContent","o","payload","label","reduce","result","entry","map","index","color","name","PercentAreaChart","top"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  ResponsiveContainer,\r\n  AreaChart,\r\n  Area,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip\r\n} from 'recharts';\r\n\r\nconst data = [\r\n  {\r\n    month: '2015.01',\r\n    a: 4000,\r\n    b: 2400,\r\n    c: 2400\r\n  },\r\n  {\r\n    month: '2015.02',\r\n    a: 3000,\r\n    b: 1398,\r\n    c: 2210\r\n  },\r\n  {\r\n    month: '2015.03',\r\n    a: 2000,\r\n    b: 9800,\r\n    c: 2290\r\n  },\r\n  {\r\n    month: '2015.04',\r\n    a: 2780,\r\n    b: 3908,\r\n    c: 2000\r\n  },\r\n  {\r\n    month: '2015.05',\r\n    a: 1890,\r\n    b: 4800,\r\n    c: 2181\r\n  },\r\n  {\r\n    month: '2015.06',\r\n    a: 2390,\r\n    b: 3800,\r\n    c: 2500\r\n  },\r\n  {\r\n    month: '2015.07',\r\n    a: 3490,\r\n    b: 4300,\r\n    c: 2100\r\n  }\r\n];\r\nconst getPercent = (value, total) => {\r\n  const ratio = total > 0 ? value / total : 0;\r\n\r\n  return toPercent(ratio, 2);\r\n};\r\n\r\nconst toPercent = (decimal, fixed = 0) => `${(decimal * 100).toFixed(fixed)}%`;\r\nconst renderTooltipContent = o => {\r\n  const { payload, label } = o;\r\n  const total = payload.reduce((result, entry) => result + entry.value, 0);\r\n\r\n  return (\r\n    <div className='customized-tooltip-content'>\r\n      <p className='total'>{`${label} (Total: ${total})`}</p>\r\n      <ul className='list'>\r\n        {payload.map((entry, index) => (\r\n          <li key={`item-${index}`} style={{ color: entry.color }}>\r\n            {`${entry.name}: ${entry.value}(${getPercent(entry.value, total)})`}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PercentAreaChart = () => {\r\n  return (\r\n    <ResponsiveContainer height={300} width={'100%'}>\r\n      <AreaChart\r\n        width={500}\r\n        height={400}\r\n        data={data}\r\n        stackOffset='expand'\r\n        margin={{\r\n          top: 10\r\n        }}>\r\n        <CartesianGrid strokeDasharray='3 3' />\r\n        <XAxis dataKey='month' />\r\n        <YAxis tickFormatter={toPercent} />\r\n        <Tooltip content={renderTooltipContent} />\r\n        <Area type='monotone' dataKey='a' stackId='1' stroke='#8884d8' fill='#8884d8' />\r\n        <Area type='monotone' dataKey='b' stackId='1' stroke='#82ca9d' fill='#82ca9d' />\r\n        <Area type='monotone' dataKey='c' stackId='1' stroke='#ffc658' fill='#ffc658' />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default PercentAreaChart;\r\n"]},"metadata":{},"sourceType":"module"}