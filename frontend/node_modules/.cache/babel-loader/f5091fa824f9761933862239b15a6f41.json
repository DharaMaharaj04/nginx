{"ast":null,"code":"import\"antd/es/form/style\";import _Form from\"antd/es/form\";import\"antd/es/button/style\";import _Button from\"antd/es/button\";import\"antd/es/divider/style\";import _Divider from\"antd/es/divider\";import\"antd/es/select/style\";import _Select from\"antd/es/select\";import\"antd/es/auto-complete/style\";import _AutoComplete from\"antd/es/auto-complete\";import _objectSpread from\"D:/nginx/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"D:/nginx/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import\"antd/es/input/style\";import _Input from\"antd/es/input\";import React from'react';import{useFormik}from'formik';import*as Yup from'yup';import Socials from'../../../layout/components/socials/Socials';import ImageLoader from'../../../layout/components/patients/ImageLoader';import{hasErrorFactory}from'../../../utils/hasError';import{useFetch}from'../../../hooks/useFetch';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var TextArea=_Input.TextArea;var doctorScheme=Yup.object({role:Yup.string().required(),name:Yup.string().required(),lastName:Yup.string().required(),img:Yup.string().required(),gender:Yup.string().required(),address:Yup.string().required()});var initialValues={role:null,name:null,lastName:null,img:null,gender:null,address:null,social:[{icon:'icofont-instagram',link:'#'},{icon:'icofont-facebook',link:'#'},{icon:'icofont-twitter',link:'#'}]};var DoctorForm=function DoctorForm(_ref){var _onSubmit=_ref.onSubmit,onCancel=_ref.onCancel;var _useFetch=useFetch('./data/doctors-specialists.json',[]),_useFetch2=_slicedToArray(_useFetch,1),roles=_useFetch2[0];var _useFormik=useFormik({initialValues:initialValues,validationSchema:doctorScheme,validateOnMount:true,initialErrors:{name:null},onSubmit:function onSubmit(values){_onSubmit(values);}}),setFieldTouched=_useFormik.setFieldTouched,handleChange=_useFormik.handleChange,handleBlur=_useFormik.handleBlur,values=_useFormik.values,setValues=_useFormik.setValues,isValid=_useFormik.isValid,errors=_useFormik.errors,touched=_useFormik.touched;var handleGenderSelect=function handleGenderSelect(gender){setValues(_objectSpread(_objectSpread({},values),{},{gender:gender}));};var handleRoleSelect=function handleRoleSelect(role){setValues(_objectSpread(_objectSpread({},values),{},{role:role}));};var handleImgLoad=function handleImgLoad(img){setValues(_objectSpread(_objectSpread({},values),{},{img:img}));};var handleCancel=function handleCancel(){onCancel();};var handleSubmit=function handleSubmit(){if(!isValid)return;_onSubmit(values);onCancel();};var hasError=hasErrorFactory(touched,errors);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(_Form,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(ImageLoader,{onLoad:handleImgLoad,src:values.img})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(_Input,{name:\"name\",type:\"text\",placeholder:\"First name\",onChange:handleChange,onBlur:handleBlur,defaultValue:values.name,className:hasError('name')})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(_Input,{type:\"text\",name:\"lastName\",placeholder:\"Last name\",onChange:handleChange,onBlur:handleBlur,defaultValue:values.lastName,className:hasError('lastName')})}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-sm-6 col-12\",children:/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(_AutoComplete,{filterOption:true,options:roles,placeholder:\"Speciality\",onSelect:handleRoleSelect,onBlur:handleBlur,className:hasError('role')})})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-sm-6 col-12\",children:/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsxs(_Select,{placeholder:\"Gender\",onChange:handleGenderSelect,defaultValue:values.gender,className:hasError('gender'),onBlur:function onBlur(){return setFieldTouched('gender');},children:[/*#__PURE__*/_jsx(_Select.Option,{value:\"Male\",children:\"Male\"}),/*#__PURE__*/_jsx(_Select.Option,{value:\"Female\",children:\"Female\"})]})})})]}),/*#__PURE__*/_jsx(TextArea,{rows:3,name:\"address\",placeholder:\"Address\",onBlur:handleBlur,onChange:handleChange,defaultValue:values.address,className:hasError('address')}),/*#__PURE__*/_jsx(_Divider,{}),/*#__PURE__*/_jsx(Socials,{links:values.social}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between buttons-list settings-actions mt-4\",children:[/*#__PURE__*/_jsx(_Button,{danger:true,onClick:handleCancel,children:\"Cancel\"}),/*#__PURE__*/_jsx(_Button,{disabled:!isValid,onClick:handleSubmit,htmlType:\"submit\",type:\"primary\",children:\"Add Doctor\"})]})]})});};export default DoctorForm;","map":{"version":3,"sources":["D:/nginx/frontend/src/pages/dashboards/doctors/DoctorForm.tsx"],"names":["React","useFormik","Yup","Socials","ImageLoader","hasErrorFactory","useFetch","TextArea","doctorScheme","object","role","string","required","name","lastName","img","gender","address","initialValues","social","icon","link","DoctorForm","onSubmit","onCancel","roles","validationSchema","validateOnMount","initialErrors","values","setFieldTouched","handleChange","handleBlur","setValues","isValid","errors","touched","handleGenderSelect","handleRoleSelect","handleImgLoad","handleCancel","handleSubmit","hasError"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport { useFormik } from 'formik';\r\nimport { Form, Button, Input, Select, AutoComplete, Divider } from 'antd';\r\nimport * as Yup from 'yup';\r\n\r\nimport Socials from '../../../layout/components/socials/Socials';\r\nimport ImageLoader from '../../../layout/components/patients/ImageLoader';\r\n\r\nimport { hasErrorFactory } from '../../../utils/hasError';\r\nimport { useFetch } from '../../../hooks/useFetch';\r\nimport { IUser } from '../../../interfaces/user';\r\n\r\nconst { TextArea } = Input;\r\n\r\ntype Props = {\r\n  onSubmit: (doctor: IUser) => void;\r\n  onCancel: () => void;\r\n};\r\n\r\nconst doctorScheme = Yup.object({\r\n  role: Yup.string().required(),\r\n  name: Yup.string().required(),\r\n  lastName: Yup.string().required(),\r\n  img: Yup.string().required(),\r\n  gender: Yup.string().required(),\r\n  address: Yup.string().required()\r\n});\r\n\r\nconst initialValues = {\r\n  role: null,\r\n  name: null,\r\n  lastName: null,\r\n  img: null,\r\n  gender: null,\r\n  address: null,\r\n  social: [\r\n    {\r\n      icon: 'icofont-instagram',\r\n      link: '#'\r\n    },\r\n    {\r\n      icon: 'icofont-facebook',\r\n      link: '#'\r\n    },\r\n    {\r\n      icon: 'icofont-twitter',\r\n      link: '#'\r\n    }\r\n  ]\r\n};\r\n\r\nconst DoctorForm = ({ onSubmit, onCancel }: Props) => {\r\n  const [roles] = useFetch<{ value: string }[]>('./data/doctors-specialists.json', []);\r\n  const {\r\n    setFieldTouched,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    setValues,\r\n    isValid,\r\n    errors,\r\n    touched\r\n  } = useFormik({\r\n    initialValues,\r\n    validationSchema: doctorScheme,\r\n    validateOnMount: true,\r\n    initialErrors: { name: null },\r\n    onSubmit: (values) => {\r\n      onSubmit(values);\r\n    }\r\n  });\r\n\r\n  const handleGenderSelect = (gender) => {\r\n    setValues({ ...values, gender });\r\n  };\r\n\r\n  const handleRoleSelect = (role) => {\r\n    setValues({ ...values, role });\r\n  };\r\n\r\n  const handleImgLoad = (img) => {\r\n    setValues({ ...values, img });\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    onCancel();\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (!isValid) return;\r\n\r\n    onSubmit(values);\r\n    onCancel();\r\n  };\r\n\r\n  const hasError = hasErrorFactory(touched, errors);\r\n\r\n  return (\r\n    <>\r\n      <Form>\r\n        <div className='form-group'>\r\n          <ImageLoader onLoad={handleImgLoad} src={values.img} />\r\n        </div>\r\n\r\n        <div className='form-group'>\r\n          <Input\r\n            name='name'\r\n            type='text'\r\n            placeholder='First name'\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            defaultValue={values.name}\r\n            className={hasError('name')}\r\n          />\r\n        </div>\r\n\r\n        <div className='form-group'>\r\n          <Input\r\n            type='text'\r\n            name='lastName'\r\n            placeholder='Last name'\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            defaultValue={values.lastName}\r\n            className={hasError('lastName')}\r\n          />\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='col-sm-6 col-12'>\r\n            <div className='form-group'>\r\n              <AutoComplete\r\n                filterOption\r\n                options={roles}\r\n                placeholder='Speciality'\r\n                onSelect={handleRoleSelect}\r\n                onBlur={handleBlur}\r\n                className={hasError('role')}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className='col-sm-6 col-12'>\r\n            <div className='form-group'>\r\n              <Select\r\n                placeholder='Gender'\r\n                onChange={handleGenderSelect}\r\n                defaultValue={values.gender}\r\n                className={hasError('gender')}\r\n                onBlur={() => setFieldTouched('gender')}\r\n              >\r\n                <Select.Option value='Male'>Male</Select.Option>\r\n                <Select.Option value='Female'>Female</Select.Option>\r\n              </Select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <TextArea\r\n          rows={3}\r\n          name='address'\r\n          placeholder='Address'\r\n          onBlur={handleBlur}\r\n          onChange={handleChange}\r\n          defaultValue={values.address}\r\n          className={hasError('address')}\r\n        />\r\n\r\n        <Divider />\r\n\r\n        <Socials links={values.social} />\r\n\r\n        <div className='d-flex justify-content-between buttons-list settings-actions mt-4'>\r\n          <Button danger onClick={handleCancel}>\r\n            Cancel\r\n          </Button>\r\n\r\n          <Button disabled={!isValid} onClick={handleSubmit} htmlType='submit' type='primary'>\r\n            Add Doctor\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DoctorForm;\r\n"]},"metadata":{},"sourceType":"module"}