{"ast":null,"code":"import\"antd/es/modal/style\";import _Modal from\"antd/es/modal\";import _objectSpread from\"D:/nginx/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"D:/nginx/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"D:/nginx/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import className from'../../../utils/class-names';import Contact from'../../../layout/components/doctor/Contact';import PageAction from'../../../layout/components/page-action/PageAction';import DoctorForm from'./DoctorForm';import{useFetchPageData,usePageData}from'../../../hooks/usePage';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var pageData={title:'Doctors',fulFilled:false,breadcrumbs:[{title:'Medicine',route:'default-dashboard'},{title:'Doctors'}]};var DoctorsPage=function DoctorsPage(){usePageData(pageData);var _useFetchPageData=useFetchPageData('./data/doctors.json',[]),_useFetchPageData2=_slicedToArray(_useFetchPageData,2),doctors=_useFetchPageData2[0],setDoctors=_useFetchPageData2[1];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),addingDoctor=_useState2[0],setAddingDoctor=_useState2[1];var openModal=function openModal(){return setAddingDoctor(true);};var closeModal=function closeModal(){return setAddingDoctor(false);};var addDoctor=function addDoctor(doctor){return setDoctors([doctor].concat(_toConsumableArray(doctors)));};var getClass=function getClass(index,length){return className({'mb-0':index===length-1,'mb-md-0':index===length-2||index===length-3});};return/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[doctors.map(function(doctor,index){return/*#__PURE__*/_jsx(\"div\",{className:\"col-sm-12 col-md-6 col-lg-4\",children:/*#__PURE__*/_jsx(Contact,_objectSpread({className:getClass(index,doctors.length)},doctor))},index);}),/*#__PURE__*/_jsx(PageAction,{onClick:openModal,icon:\"icofont-contact-add\"}),/*#__PURE__*/_jsx(_Modal,{visible:addingDoctor,onCancel:closeModal,title:/*#__PURE__*/_jsx(\"h3\",{className:\"title\",children:\"Add doctor\"}),destroyOnClose:true,footer:null,children:/*#__PURE__*/_jsx(DoctorForm,{onSubmit:addDoctor,onCancel:closeModal})})]});};export default DoctorsPage;","map":{"version":3,"sources":["D:/nginx/frontend/src/pages/dashboards/doctors/Doctors.tsx"],"names":["React","useState","className","Contact","PageAction","DoctorForm","useFetchPageData","usePageData","pageData","title","fulFilled","breadcrumbs","route","DoctorsPage","doctors","setDoctors","addingDoctor","setAddingDoctor","openModal","closeModal","addDoctor","doctor","getClass","index","length","map"],"mappings":"0XAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAIA,MAAOC,CAAAA,SAAP,KAAsB,4BAAtB,CAEA,MAAOC,CAAAA,OAAP,KAAoB,2CAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,mDAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CAEA,OAASC,gBAAT,CAA2BC,WAA3B,KAA8C,wBAA9C,C,wFAKA,GAAMC,CAAAA,QAAmB,CAAG,CAC1BC,KAAK,CAAE,SADmB,CAE1BC,SAAS,CAAE,KAFe,CAG1BC,WAAW,CAAE,CACX,CACEF,KAAK,CAAE,UADT,CAEEG,KAAK,CAAE,mBAFT,CADW,CAKX,CACEH,KAAK,CAAE,SADT,CALW,CAHa,CAA5B,CAcA,GAAMI,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBN,WAAW,CAACC,QAAD,CAAX,CACA,sBAA8BF,gBAAgB,CAAU,qBAAV,CAAiC,EAAjC,CAA9C,wDAAOQ,OAAP,uBAAgBC,UAAhB,uBACA,cAAwCd,QAAQ,CAAC,KAAD,CAAhD,wCAAOe,YAAP,eAAqBC,eAArB,eAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,SAAMD,CAAAA,eAAe,CAAC,IAAD,CAArB,EAAlB,CACA,GAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,SAAMF,CAAAA,eAAe,CAAC,KAAD,CAArB,EAAnB,CAEA,GAAMG,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,MAAD,QAAmBN,CAAAA,UAAU,EAAEM,MAAF,4BAAaP,OAAb,GAA7B,EAAlB,CAEA,GAAMQ,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAgBC,MAAhB,QACftB,CAAAA,SAAS,CAAC,CACR,OAAQqB,KAAK,GAAKC,MAAM,CAAG,CADnB,CAER,UAAWD,KAAK,GAAKC,MAAM,CAAG,CAAnB,EAAwBD,KAAK,GAAKC,MAAM,CAAG,CAF9C,CAAD,CADM,EAAjB,CAMA,mBACE,aAAK,SAAS,CAAC,KAAf,WACGV,OAAO,CAACW,GAAR,CAAY,SAACJ,MAAD,CAASE,KAAT,qBACX,YAAiB,SAAS,CAAC,6BAA3B,uBACE,KAAC,OAAD,gBAAS,SAAS,CAAED,QAAQ,CAACC,KAAD,CAAQT,OAAO,CAACU,MAAhB,CAA5B,EAAyDH,MAAzD,EADF,EAAUE,KAAV,CADW,EAAZ,CADH,cAOE,KAAC,UAAD,EAAY,OAAO,CAAEL,SAArB,CAAgC,IAAI,CAAC,qBAArC,EAPF,cASE,aACE,OAAO,CAAEF,YADX,CAEE,QAAQ,CAAEG,UAFZ,CAGE,KAAK,cAAE,WAAI,SAAS,CAAC,OAAd,wBAHT,CAIE,cAAc,KAJhB,CAKE,MAAM,CAAE,IALV,uBAOE,KAAC,UAAD,EAAY,QAAQ,CAAEC,SAAtB,CAAiC,QAAQ,CAAED,UAA3C,EAPF,EATF,GADF,CAqBD,CArCD,CAuCA,cAAeN,CAAAA,WAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport { Modal } from 'antd';\r\n\r\nimport className from '../../../utils/class-names';\r\n\r\nimport Contact from '../../../layout/components/doctor/Contact';\r\nimport PageAction from '../../../layout/components/page-action/PageAction';\r\nimport DoctorForm from './DoctorForm';\r\n\r\nimport { useFetchPageData, usePageData } from '../../../hooks/usePage';\r\n\r\nimport { IUser } from '../../../interfaces/user';\r\nimport { IPageData } from '../../../interfaces/page';\r\n\r\nconst pageData: IPageData = {\r\n  title: 'Doctors',\r\n  fulFilled: false,\r\n  breadcrumbs: [\r\n    {\r\n      title: 'Medicine',\r\n      route: 'default-dashboard'\r\n    },\r\n    {\r\n      title: 'Doctors'\r\n    }\r\n  ]\r\n};\r\n\r\nconst DoctorsPage = () => {\r\n  usePageData(pageData);\r\n  const [doctors, setDoctors] = useFetchPageData<IUser[]>('./data/doctors.json', []);\r\n  const [addingDoctor, setAddingDoctor] = useState(false);\r\n\r\n  const openModal = () => setAddingDoctor(true);\r\n  const closeModal = () => setAddingDoctor(false);\r\n\r\n  const addDoctor = (doctor: IUser) => setDoctors([doctor, ...doctors]);\r\n\r\n  const getClass = (index: number, length: number) =>\r\n    className({\r\n      'mb-0': index === length - 1,\r\n      'mb-md-0': index === length - 2 || index === length - 3\r\n    });\r\n\r\n  return (\r\n    <div className='row'>\r\n      {doctors.map((doctor, index) => (\r\n        <div key={index} className='col-sm-12 col-md-6 col-lg-4'>\r\n          <Contact className={getClass(index, doctors.length)} {...doctor} />\r\n        </div>\r\n      ))}\r\n\r\n      <PageAction onClick={openModal} icon='icofont-contact-add' />\r\n\r\n      <Modal\r\n        visible={addingDoctor}\r\n        onCancel={closeModal}\r\n        title={<h3 className='title'>Add doctor</h3>}\r\n        destroyOnClose\r\n        footer={null}\r\n      >\r\n        <DoctorForm onSubmit={addDoctor} onCancel={closeModal} />\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorsPage;\r\n"]},"metadata":{},"sourceType":"module"}