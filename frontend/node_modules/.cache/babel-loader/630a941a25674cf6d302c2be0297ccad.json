{"ast":null,"code":"import\"antd/es/divider/style\";import _Divider from\"antd/es/divider\";import\"antd/es/button/style\";import _Button from\"antd/es/button\";import\"antd/es/input/style\";import _Input from\"antd/es/input\";import _defineProperty from\"D:/nginx/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"D:/nginx/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"D:/nginx/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import\"antd/es/select/style\";import _Select from\"antd/es/select\";import\"antd/es/form/style\";import _Form from\"antd/es/form\";import React,{useState}from'react';import{useFormik}from'formik';import ImageLoader from'../../layout/components/patients/ImageLoader';import{usePageData}from'../../hooks/usePage';import{useGetUser}from'../../hooks/useGetUser';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var pageData={title:'Edit account',fulFilled:true,breadcrumbs:[{title:'Apps',route:'default-dashboard'},{title:'Service Pages ',route:'default-dashboard'},{title:'Edit Account'}]};var FormItem=_Form.Item;var Option=_Select.Option;var UserAvatar=function UserAvatar(_ref){var src=_ref.src,_ref$className=_ref.className,className=_ref$className===void 0?null:_ref$className;return/*#__PURE__*/_jsx(\"div\",{className:\"avatar-wrapper \".concat(className),children:/*#__PURE__*/_jsx(ImageLoader,{src:src,size:100})});};var AccountForm=function AccountForm(_ref2){var user=_ref2.user;var _useState=useState(_objectSpread({},user)),_useState2=_slicedToArray(_useState,2),submitted=_useState2[0],setSubmitted=_useState2[1];var _useFormik=useFormik({onSubmit:function onSubmit(values){return setSubmitted(values);},initialValues:_objectSpread({},user)}),values=_useFormik.values,setValues=_useFormik.setValues,handleSubmit=_useFormik.handleSubmit;var handleChange=function handleChange(e){setValues(_objectSpread(_objectSpread({},values),{},_defineProperty({},e.target.name,e.target.value)));};var handleSelectChange=function handleSelectChange(name){return function(value){setValues(_objectSpread(_objectSpread({},values),{},_defineProperty({},name,value)));};};var hasChanged=Object.keys(values).some(function(key){return values[key]!==submitted[key];});return/*#__PURE__*/_jsxs(_Form,{layout:\"vertical\",children:[/*#__PURE__*/_jsx(FormItem,{label:\"First Name\",children:/*#__PURE__*/_jsx(_Input,{name:\"name\",onChange:handleChange,placeholder:\"First Name\",defaultValue:values.name})}),/*#__PURE__*/_jsx(FormItem,{label:\"Last Name\",children:/*#__PURE__*/_jsx(_Input,{name:\"lastName\",onChange:handleChange,defaultValue:values.lastName,placeholder:\"Last Name\"})}),/*#__PURE__*/_jsx(FormItem,{label:\"Age\",children:/*#__PURE__*/_jsx(_Input,{type:\"number\",name:\"age\",onChange:handleChange,defaultValue:values.age,placeholder:\"Age\"})}),/*#__PURE__*/_jsx(FormItem,{label:\"Gender\",children:/*#__PURE__*/_jsxs(_Select,{onChange:handleSelectChange('gender'),defaultValue:values.gender,placeholder:\"Gender\",children:[/*#__PURE__*/_jsx(Option,{value:\"male\",children:\"Male\"}),/*#__PURE__*/_jsx(Option,{value:\"female\",children:\"Female\"})]})}),/*#__PURE__*/_jsx(FormItem,{label:\"Phone number\",children:/*#__PURE__*/_jsx(_Input,{type:\"number\",name:\"number\",onChange:handleChange,defaultValue:values.number,placeholder:\"Phone number\"})}),/*#__PURE__*/_jsx(FormItem,{label:\"Address\",children:/*#__PURE__*/_jsx(_Input.TextArea,{name:\"address\",onChange:handleChange,rows:4,defaultValue:values.address,placeholder:\"Address\"})}),/*#__PURE__*/_jsx(FormItem,{label:\"Last visit\",children:/*#__PURE__*/_jsx(_Input,{defaultValue:values.lastVisit,placeholder:\"Last visit\",readOnly:true})}),/*#__PURE__*/_jsx(FormItem,{label:\"Status\",children:/*#__PURE__*/_jsxs(_Select,{defaultValue:values.status,placeholder:\"Status\",onChange:handleSelectChange('status'),children:[/*#__PURE__*/_jsx(Option,{value:\"approved\",children:\"Approved\"}),/*#__PURE__*/_jsx(Option,{value:\"pending\",children:\"Pending\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"elem-list justify-content-between\",children:[/*#__PURE__*/_jsx(_Button,{disabled:!hasChanged,className:\"bg-color-success\",onClick:function onClick(){return handleSubmit();},children:/*#__PURE__*/_jsx(\"span\",{className:\"text-color-500\",children:\"Save changes\"})}),/*#__PURE__*/_jsx(_Button,{ghost:true,danger:true,className:\"ml-auto\",children:\"Delete account\"})]})]});};var PasswordForm=function PasswordForm(){return/*#__PURE__*/_jsxs(_Form,{layout:\"vertical\",children:[/*#__PURE__*/_jsx(FormItem,{label:\"Current password\",children:/*#__PURE__*/_jsx(_Input.Password,{placeholder:\"Current Password\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6 col-sm-12\",children:/*#__PURE__*/_jsx(FormItem,{name:\"password\",label:\"New Password\",rules:[{required:true,message:'Please enter new password'}],children:/*#__PURE__*/_jsx(_Input.Password,{placeholder:\"New Password\"})})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6 col-sm-12\",children:/*#__PURE__*/_jsx(FormItem,{name:\"confirmPassword\",label:\"Confirm Password\",rules:[{required:true,message:'Please confirm your password!'},function(_ref3){var getFieldValue=_ref3.getFieldValue;return{validator:function validator(rule,value){if(!value||getFieldValue('password')===value){return Promise.resolve();}return Promise.reject('The two passwords that you entered do not match!');}};}],children:/*#__PURE__*/_jsx(_Input.Password,{placeholder:\"Confirm Password\"})})})]}),/*#__PURE__*/_jsx(_Button,{type:\"primary\",children:\"Change password\"})]});};var EditAccountPage=function EditAccountPage(){var user=useGetUser();usePageData(pageData);return/*#__PURE__*/_jsxs(\"div\",{className:\"stack\",style:{maxWidth:690,margin:'0 auto'},children:[/*#__PURE__*/_jsx(UserAvatar,{className:\"mt-0\",src:user.img}),/*#__PURE__*/_jsx(AccountForm,{user:user}),/*#__PURE__*/_jsx(_Divider,{}),/*#__PURE__*/_jsx(PasswordForm,{})]});};export default EditAccountPage;","map":{"version":3,"sources":["D:/nginx/frontend/src/pages/services/EditAccounPage.tsx"],"names":["React","useState","useFormik","ImageLoader","usePageData","useGetUser","pageData","title","fulFilled","breadcrumbs","route","FormItem","Item","Option","UserAvatar","src","className","AccountForm","user","submitted","setSubmitted","onSubmit","values","initialValues","setValues","handleSubmit","handleChange","e","target","name","value","handleSelectChange","hasChanged","Object","keys","some","key","lastName","age","gender","number","address","lastVisit","status","PasswordForm","required","message","getFieldValue","validator","rule","Promise","resolve","reject","EditAccountPage","maxWidth","margin","img"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useState } from 'react';\r\n\r\nimport { useFormik } from 'formik';\r\nimport { Button, Divider, Form, Input, Select } from 'antd';\r\n\r\nimport ImageLoader from '../../layout/components/patients/ImageLoader';\r\n\r\nimport { usePageData } from '../../hooks/usePage';\r\nimport { useGetUser } from '../../hooks/useGetUser';\r\n\r\nimport { IPageData } from '../../interfaces/page';\r\nimport { IPatient } from '../../interfaces/patient';\r\n\r\nconst pageData: IPageData = {\r\n  title: 'Edit account',\r\n  fulFilled: true,\r\n  breadcrumbs: [\r\n    {\r\n      title: 'Apps',\r\n      route: 'default-dashboard'\r\n    },\r\n    {\r\n      title: 'Service Pages ',\r\n      route: 'default-dashboard'\r\n    },\r\n    {\r\n      title: 'Edit Account'\r\n    }\r\n  ]\r\n};\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nconst UserAvatar = ({ src, className = null }) => {\r\n  return (\r\n    <div className={`avatar-wrapper ${className}`}>\r\n      <ImageLoader src={src} size={100} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AccountForm = ({ user }) => {\r\n  const [submitted, setSubmitted] = useState({ ...user });\r\n  const { values, setValues, handleSubmit } = useFormik<IPatient>({\r\n    onSubmit: (values) => setSubmitted(values),\r\n    initialValues: { ...user }\r\n  });\r\n\r\n  const handleChange = (\r\n    e: ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>\r\n  ) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSelectChange = (name) => (value) => {\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n  const hasChanged = Object.keys(values).some((key) => values[key] !== submitted[key]);\r\n\r\n  return (\r\n    <Form layout='vertical'>\r\n      <FormItem label='First Name'>\r\n        <Input\r\n          name='name'\r\n          onChange={handleChange}\r\n          placeholder='First Name'\r\n          defaultValue={values.name}\r\n        />\r\n      </FormItem>\r\n\r\n      <FormItem label='Last Name'>\r\n        <Input\r\n          name='lastName'\r\n          onChange={handleChange}\r\n          defaultValue={values.lastName}\r\n          placeholder='Last Name'\r\n        />\r\n      </FormItem>\r\n\r\n      <FormItem label='Age'>\r\n        <Input\r\n          type='number'\r\n          name='age'\r\n          onChange={handleChange}\r\n          defaultValue={values.age}\r\n          placeholder='Age'\r\n        />\r\n      </FormItem>\r\n\r\n      <FormItem label='Gender'>\r\n        <Select\r\n          onChange={handleSelectChange('gender')}\r\n          defaultValue={values.gender}\r\n          placeholder='Gender'\r\n        >\r\n          <Option value='male'>Male</Option>\r\n          <Option value='female'>Female</Option>\r\n        </Select>\r\n      </FormItem>\r\n\r\n      <FormItem label='Phone number'>\r\n        <Input\r\n          type='number'\r\n          name='number'\r\n          onChange={handleChange}\r\n          defaultValue={values.number}\r\n          placeholder='Phone number'\r\n        />\r\n      </FormItem>\r\n\r\n      <FormItem label='Address'>\r\n        <Input.TextArea\r\n          name='address'\r\n          onChange={handleChange}\r\n          rows={4}\r\n          defaultValue={values.address}\r\n          placeholder='Address'\r\n        />\r\n      </FormItem>\r\n\r\n      <FormItem label='Last visit'>\r\n        <Input defaultValue={values.lastVisit} placeholder='Last visit' readOnly />\r\n      </FormItem>\r\n\r\n      <FormItem label='Status'>\r\n        <Select\r\n          defaultValue={values.status}\r\n          placeholder='Status'\r\n          onChange={handleSelectChange('status')}\r\n        >\r\n          <Option value='approved'>Approved</Option>\r\n          <Option value='pending'>Pending</Option>\r\n        </Select>\r\n      </FormItem>\r\n\r\n      <div className='elem-list justify-content-between'>\r\n        <Button disabled={!hasChanged} className='bg-color-success' onClick={() => handleSubmit()}>\r\n          <span className='text-color-500'>Save changes</span>\r\n        </Button>\r\n\r\n        <Button ghost danger className='ml-auto'>\r\n          Delete account\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst PasswordForm = () => {\r\n  return (\r\n    <Form layout='vertical'>\r\n      <FormItem label='Current password'>\r\n        <Input.Password placeholder='Current Password' />\r\n      </FormItem>\r\n\r\n      <div className='row'>\r\n        <div className='col-md-6 col-sm-12'>\r\n          <FormItem\r\n            name='password'\r\n            label='New Password'\r\n            rules={[{ required: true, message: 'Please enter new password' }]}\r\n          >\r\n            <Input.Password placeholder='New Password' />\r\n          </FormItem>\r\n        </div>\r\n\r\n        <div className='col-md-6 col-sm-12'>\r\n          <FormItem\r\n            name='confirmPassword'\r\n            label='Confirm Password'\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please confirm your password!'\r\n              },\r\n              ({ getFieldValue }) => ({\r\n                validator(rule, value) {\r\n                  if (!value || getFieldValue('password') === value) {\r\n                    return Promise.resolve();\r\n                  }\r\n                  return Promise.reject('The two passwords that you entered do not match!');\r\n                }\r\n              })\r\n            ]}\r\n          >\r\n            <Input.Password placeholder='Confirm Password' />\r\n          </FormItem>\r\n        </div>\r\n      </div>\r\n\r\n      <Button type='primary'>Change password</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst EditAccountPage = () => {\r\n  const user = useGetUser();\r\n  usePageData(pageData);\r\n  return (\r\n    <div className='stack' style={{ maxWidth: 690, margin: '0 auto' }}>\r\n      <UserAvatar className='mt-0' src={user.img} />\r\n      <AccountForm user={user} />\r\n\r\n      <Divider />\r\n\r\n      <PasswordForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditAccountPage;\r\n"]},"metadata":{},"sourceType":"module"}