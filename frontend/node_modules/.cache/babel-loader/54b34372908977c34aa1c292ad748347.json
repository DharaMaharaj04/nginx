{"ast":null,"code":"import{createStore,combineReducers,applyMiddleware,compose}from'redux';import thunk from'redux-thunk';import{createHashHistory}from'history';import{settingsReducer}from'./settings/reducer';import{pageDataReducer}from'./page-data/reducer';import{patientsReducer}from'./patients/reducer';export var history=createHashHistory();var rootReducer=combineReducers({pageData:pageDataReducer,settings:settingsReducer,patients:patientsReducer});var composeEnhancers=window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__']||compose;export var store=createStore(rootReducer,composeEnhancers(applyMiddleware(thunk)));","map":{"version":3,"sources":["D:/nginx/frontend/src/redux/store.ts"],"names":["createStore","combineReducers","applyMiddleware","compose","thunk","createHashHistory","settingsReducer","pageDataReducer","patientsReducer","history","rootReducer","pageData","settings","patients","composeEnhancers","window","store"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,CAAuCC,eAAvC,CAAwDC,OAAxD,KAAuE,OAAvE,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CAEA,OAASC,iBAAT,KAAkC,SAAlC,CAEA,OAASC,eAAT,KAAgC,oBAAhC,CACA,OAASC,eAAT,KAAgC,qBAAhC,CACA,OAASC,eAAT,KAAgC,oBAAhC,CAEA,MAAO,IAAMC,CAAAA,OAAO,CAAGJ,iBAAiB,EAAjC,CAEP,GAAMK,CAAAA,WAAW,CAAGT,eAAe,CAAC,CAClCU,QAAQ,CAAEJ,eADwB,CAElCK,QAAQ,CAAEN,eAFwB,CAGlCO,QAAQ,CAAEL,eAHwB,CAAD,CAAnC,CAOA,GAAMM,CAAAA,gBAAgB,CAAGC,MAAM,CAAC,sCAAD,CAAN,EAAoEZ,OAA7F,CACA,MAAO,IAAMa,CAAAA,KAAK,CAAGhB,WAAW,CAC9BU,WAD8B,CAE9BI,gBAAgB,CAACZ,eAAe,CAACE,KAAD,CAAhB,CAFc,CAAzB","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { createHashHistory } from 'history';\r\n\r\nimport { settingsReducer } from './settings/reducer';\r\nimport { pageDataReducer } from './page-data/reducer';\r\nimport { patientsReducer } from './patients/reducer';\r\n\r\nexport const history = createHashHistory();\r\n\r\nconst rootReducer = combineReducers({\r\n  pageData: pageDataReducer,\r\n  settings: settingsReducer,\r\n  patients: patientsReducer\r\n});\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\nconst composeEnhancers = window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] as typeof compose || compose;\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n"]},"metadata":{},"sourceType":"module"}